@use "sass:color";
@use "../libs/functions";
@use "../libs/vendor";

///
/// Future Imperfect by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Button */

	input[type="submit"],
	input[type="reset"],
	input[type="button"],
	button,
	.button {
		@include vendor.vendor('appearance', 'none');
		@include vendor.vendor('transition', (
			'background-color #{functions.duration(transition)} ease',
			'box-shadow #{functions.duration(transition)} ease',
			'color #{functions.duration(transition)} ease'
		));
		background-color: transparent;
		border: 0;
		box-shadow: inset 0 0 0 1px functions.palette(border);
		color: functions.palette(fg-bold) !important;
		cursor: pointer;
		display: inline-block;
		font-family: functions.font(family-heading);
		font-size: 0.6em;
		font-weight: functions.font(weight-heading-bold);
		height: auto;
		letter-spacing: functions.font(kerning-heading);
		line-height: functions.size(element-height) * 1.5;
		padding: 0 2.5em;
		text-align: center;
		text-decoration: none;
		text-transform: uppercase;
		white-space: normal;

		&:hover {
			box-shadow: inset 0 0 0 1px functions.palette(accent);
			color: functions.palette(accent) !important;

			&:active {
				background-color: color.adjust(functions.palette(accent), $alpha: -0.95);
			}
		}

		&:before, &:after {
			color: functions.palette(fg-light);
			position: relative;
		}

		&:before {
			left: -1em;
			padding: 0 0 0 0.75em;
		}

		&:after {
			left: 1em;
			padding: 0 0.75em 0 0;
		}

		&.fit {
			width: 100%;
		}

		&.large {
			font-size: 0.7em;
			padding: 0 3em;
		}

		&.small {
			font-size: 0.5em;
		}
		&.primary {
			background-color: functions.palette(accent);
			box-shadow: none;
			color: functions.palette(bg) !important;

			&:hover {
				background-color: color.adjust(functions.palette(accent), $lightness: 3);
			}

			&:active {
				background-color: color.adjust(functions.palette(accent), $lightness: -3);
			}
		}

		&.secondary {
			background-color: functions.palette(secondary);
			box-shadow: none;
			color: functions.palette(bg) !important;

			&:hover {
				background-color: color.adjust(functions.palette(secondary), $lightness: 3);
			}

			&:active {
				background-color: color.adjust(functions.palette(secondary), $lightness: -3);
			}
		}
		&.success {
			background-color: functions.palette(success);
			box-shadow: none;
			color: functions.palette(bg) !important;

			&:hover {
				background-color: color.adjust(functions.palette(success), $lightness: 3);
			}

			&:active {
				background-color: color.adjust(functions.palette(success), $lightness: -3);
			}
		}

		&.info {
			background-color: functions.palette(info);
			box-shadow: none;
			color: functions.palette(bg) !important;

			&:hover {
				background-color: color.adjust(functions.palette(info), $lightness: 3);
			}

			&:active {
				background-color: color.adjust(functions.palette(info), $lightness: -3);
			}
		}

		&.warning {
			background-color: functions.palette(warning);
			box-shadow: none;
			color: functions.palette(fg-bold) !important;

			&:hover {
				background-color: color.adjust(functions.palette(warning), $lightness: 3);
			}

			&:active {
				background-color: color.adjust(functions.palette(warning), $lightness: -3);
			}
		}

		&.danger {
			background-color: functions.palette(danger);
			box-shadow: none;
			color: functions.palette(bg) !important;

			&:hover {
				background-color: color.adjust(functions.palette(danger), $lightness: 3);
			}

			&:active {
				background-color: color.adjust(functions.palette(danger), $lightness: -3);
			}
		}
		&.disabled,
		&:disabled {
			@include vendor.vendor('pointer-events', 'none');
			color: functions.palette(border) !important;

			&:before {
				color: functions.palette(border) !important;
			}
		}
	}